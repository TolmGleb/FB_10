version: '3'

services:
  # Первый экземпляр приложения
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_NAME=instance1
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # Второй экземпляр приложения
  app2:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_NAME=instance2
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # Третий экземпляр приложения
  app3:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_NAME=instance3
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # Nginx балансировщик нагрузки
  load_balancer:
    image: nginx:alpine
    ports:
      - "3000:80"  # Порт для магазина
      - "8081:81"  # Порт для WebSocket
      - "8082:82"  # Порт для админки
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3
    restart: unless-stopped